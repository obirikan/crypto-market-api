{"version":3,"sources":["Display.jsx","App.js","reportWebVitals.js","index.js"],"names":["Display","name","image","price","symbol","volume","priceChange","className","src","alt","toLocaleString","toFixed","App","useState","coins","setcoins","search","setSearch","useEffect","axios","get","then","res","data","console","log","catch","error","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAsBeA,MArBf,YAAgE,IAA9CC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,MAAMC,EAAkC,EAAlCA,MAAMC,EAA4B,EAA5BA,OAAOC,EAAqB,EAArBA,OAAOC,EAAc,EAAdA,YAC7C,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACK,qBAAKC,IAAKN,EAAOO,IAAI,WACrB,6BAAKR,IACL,mBAAGM,UAAU,cAAb,SAA4BH,OAEjC,sBAAKG,UAAU,YAAf,UACM,oBAAGA,UAAU,aAAb,cAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,UAA4BF,EAAOK,iBAAnC,OACCJ,EAAY,EAAG,oBAAGC,UAAU,mBAAb,UAAiCD,EAAYK,QAAQ,GAArD,OACb,oBAAGJ,UAAU,qBAAb,UAAmCD,EAAYK,QAAQ,GAAvD,gBCqCVC,MA9Cf,WACE,MAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAMG,EAAN,KAAaC,EAAb,KACDC,qBAAU,WACTC,IAAMC,IAAI,4HACTC,MAAK,SAACC,GACLP,EAASO,EAAIC,MACbC,QAAQC,IAAIX,MACXY,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,QAC7B,IAEF,IAGMC,EAAOd,EAAMc,QACjB,SAAAC,GAAI,OAAEA,EAAK5B,KAAK6B,cAAcC,SAASf,EAAOc,kBAE/C,OACE,sBAAKvB,UAAU,WAAf,UACO,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,YAAd,+BAGA,+BACI,uBAAOyB,KAAK,OAAOC,YAAY,SAAS1B,UAAU,aAClD2B,SAdA,SAAAC,GACjBlB,EAAUkB,EAAEC,OAAOC,eAiBVT,EAAOU,KAAI,SAAAT,GACd,OACE,cAAC,EAAD,CAEC5B,KAAM4B,EAAK5B,KACXC,MAAO2B,EAAK3B,MACZE,OAAQyB,EAAKzB,OACbC,OAAQwB,EAAKU,WACbpC,MAAO0B,EAAKW,cACZlC,YAAauB,EAAKY,6BANbZ,EAAKa,WCzBPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b35093f0.chunk.js","sourcesContent":["import React from \"react\"\r\nfunction Display({name,image,price,symbol,volume,priceChange}) {\r\n    return (\r\n        <div className='coin-container'>\r\n            <div className='coin-row'>\r\n                <div className=\"coin\">\r\n                     <img src={image} alt=\"crypto\"/>\r\n                     <h1>{name}</h1>\r\n                     <p className=\"coin-symbol\">{symbol}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                      <p className=\"coin-price\">${price}</p> \r\n                      <p className=\"coin-volume\">{volume.toLocaleString()}%</p>\r\n                      {priceChange<0?(<p className='coin-percent red'>{priceChange.toFixed(2)}%</p>):\r\n                        (<p className='coin-percent green'>{priceChange.toFixed(2)}%</p>)\r\n                      }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import './App.css';\nimport React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport Display from './Display';\n\nfunction App() {\n  const[coins,setcoins]=useState([])\n  const[search,setSearch]=useState('')\n useEffect(()=>{\n  axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n  .then((res)=>{\n    setcoins(res.data)\n    console.log(coins)\n  }).catch((error)=>console.log(error))\n },[])\n \n const handlechange=e=>{\n   setSearch(e.target.value)\n }\n const filter=coins.filter(\n   coin=>coin.name.toLowerCase().includes(search.toLowerCase())\n )\n  return (\n    <div className='coin-app'>\n           <div className='coin-search'>\n                <h1 className='coin-text'>\n                   search a currency\n                </h1>\n                <form >\n                    <input type=\"text\" placeholder='search' className='coin-input'\n                    onChange={handlechange}\n                    />\n                </form>\n           </div>\n           {filter.map(coin=>{\n         return(\n           <Display\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            volume={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n           />\n         )\n           })}\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}